{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Mini Calculadora';\n    //Declaramos dos variables de tipo number e inicializadas por defecto a 0 que representen nuestras cifras a operar\n    this.cifra1 = 0;\n    this.cifra2 = 0;\n    //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n    this.resultado = 0;\n  }\n  //Implementamos la función de suma\n  sumar() {\n    this.resultado = this.cifra1 + this.cifra2;\n  }\n  //Implementamos la función de resta\n  restar() {\n    this.resultado = this.cifra1 - this.cifra2;\n  }\n  //Implementamos la función de multiplicacion\n  multiplicar() {\n    this.resultado = this.cifra1 * this.cifra2;\n  }\n  //Implementamos la función de division\n  dividir() {\n    this.cifra2 == 0 ? alert(\"No es posible dividir entre 0\") : this.resultado = this.cifra1 / this.cifra2;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 26,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-sm-4\"], [\"type\", \"number\", \"name\", \"cifra1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"cifra2\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-2\"], [\"type\", \"submit\", \"value\", \"Sumar\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"Restar\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"Multiplicar\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"Dividir\", 1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\")(4, \"div\", 1)(5, \"div\", 2);\n        i0.ɵɵtext(6, \" Cifra 1: \");\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.cifra1 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\")(9, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵtext(11, \" Cifra 2: \");\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.cifra2 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\")(14, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 5)(17, \"input\", 6);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_17_listener() {\n          return ctx.sumar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 5)(19, \"input\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_19_listener() {\n          return ctx.restar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_21_listener() {\n          return ctx.multiplicar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_23_listener() {\n          return ctx.dividir();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra2);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\"Resultado = \", ctx.resultado, \"\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","title","cifra1","cifra2","resultado","sumar","restar","multiplicar","dividir","alert","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_Template_input_ngModelChange_7_listener","$event","ɵɵelement","AppComponent_Template_input_ngModelChange_12_listener","AppComponent_Template_input_click_17_listener","AppComponent_Template_input_click_19_listener","AppComponent_Template_input_click_21_listener","AppComponent_Template_input_click_23_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.ts","C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Mini Calculadora';\n\n  //Declaramos dos variables de tipo number e inicializadas por defecto a 0 que representen nuestras cifras a operar\n  cifra1:number=0;\n  cifra2:number=0;\n\n  //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n  resultado:number=0;\n\n  //Implementamos la función de suma\n  sumar():void{\n    this.resultado = this.cifra1 + this.cifra2;\n  }\n\n  //Implementamos la función de resta\n  restar():void{\n    this.resultado = this.cifra1 - this.cifra2;\n  }\n\n  //Implementamos la función de multiplicacion\n  multiplicar():void{\n    this.resultado = this.cifra1 * this.cifra2;\n  }\n\n  //Implementamos la función de division\n  dividir():void{\n    this.cifra2 == 0 ? alert(\"No es posible dividir entre 0\") : this.resultado = this.cifra1 / this.cifra2;\n  }\n}\n","<h1>{{title}}</h1>\n<div class=\"container\">\n\n<form>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      Cifra 1: <input type=\"number\" [(ngModel)] = \"cifra1\" name=\"cifra1\"><br><br>\n    </div>\n    <div class=\"col-sm-4\">\n      Cifra 2: <input type=\"number\" [(ngModel)] = \"cifra2\" name=\"cifra2\"><br><br>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-2\">\n      <input type=\"submit\" value=\"Sumar\" (click)=\"sumar()\" class=\"btn btn-success\">\n    </div>\n    <div class=\"col-sm-2\">\n      <input type=\"submit\" value=\"Restar\" (click)=\"restar()\" class=\"btn btn-success\">\n    </div>\n    <div class=\"col-sm-2\">\n      <input type=\"submit\" value=\"Multiplicar\" (click)=\"multiplicar()\" class=\"btn btn-success\">\n    </div>\n    <div class=\"col-sm-2\">\n      <input type=\"submit\" value=\"Dividir\" (click)=\"dividir()\" class=\"btn btn-success\">\n    </div>\n  </div>\n</form>\n\n<p>Resultado = {{resultado}}</p>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}