{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Mini Calculadora';\n    //Declaramos dos variables de tipo number e inicializadas por defecto a 0 que representen nuestras cifras a operar\n    this.cifra1 = 0;\n    this.cifra2 = 0;\n    //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n    this.resultado = 0;\n  }\n  //Implementamos la función de suma\n  sumar() {\n    this.resultado = this.cifra1 + this.cifra2;\n  }\n  //Implementamos la función de resta\n  restar() {\n    this.resultado = this.cifra1 - this.cifra2;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"container\"], [\"type\", \"number\", \"name\", \"cifra1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"cifra2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Sumar\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"Restar\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\");\n        i0.ɵɵtext(4, \" Cifra 1: \");\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.cifra1 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\")(7, \"br\");\n        i0.ɵɵtext(8, \" Cifra 2: \");\n        i0.ɵɵelementStart(9, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.cifra2 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"input\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_12_listener() {\n          return ctx.sumar();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_13_listener() {\n          return ctx.restar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Resultado = \", ctx.resultado, \"\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","title","cifra1","cifra2","resultado","sumar","restar","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_Template_input_ngModelChange_5_listener","$event","ɵɵelement","AppComponent_Template_input_ngModelChange_9_listener","AppComponent_Template_input_click_12_listener","AppComponent_Template_input_click_13_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.ts","C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Mini Calculadora';\n\n  //Declaramos dos variables de tipo number e inicializadas por defecto a 0 que representen nuestras cifras a operar\n  cifra1:number=0;\n  cifra2:number=0;\n\n  //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n  resultado:number=0;\n\n  //Implementamos la función de suma\n  sumar():void{\n    this.resultado = this.cifra1 + this.cifra2;\n  }\n\n  //Implementamos la función de resta\n  restar():void{\n    this.resultado = this.cifra1 - this.cifra2;\n  }\n}\n","<h1>{{title}}</h1>\n<div class=\"container\">\n<form>\n  Cifra 1: <input type=\"number\" [(ngModel)] = \"cifra1\" name=\"cifra1\"><br><br>\n\n  Cifra 2: <input type=\"number\" [(ngModel)] = \"cifra2\" name=\"cifra2\"><br><br>\n\n  <input type=\"submit\" value=\"Sumar\" (click)=\"sumar()\">\n  <input type=\"submit\" value=\"Restar\" (click)=\"restar()\" class=\"btn btn-primary\">\n</form>\n\n<p>Resultado = {{resultado}}</p>\n</div>"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,kBAAkB;IAE1B;IACA,KAAAC,MAAM,GAAQ,CAAC;IACf,KAAAC,MAAM,GAAQ,CAAC;IAEf;IACA,KAAAC,SAAS,GAAQ,CAAC;;EAElB;EACAC,KAAKA,CAAA;IACH,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,MAAM,GAAG,IAAI,CAACC,MAAM;EAC5C;EAEA;EACAG,MAAMA,CAAA;IACJ,IAAI,CAACF,SAAS,GAAG,IAAI,CAACF,MAAM,GAAG,IAAI,CAACC,MAAM;EAC5C;EAAC,QAAAI,CAAA,G;qBAlBUR,YAAY;EAAA;EAAA,QAAAS,EAAA,G;UAAZT,YAAY;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBE,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,GAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClBH,EAAA,CAAAC,cAAA,aAAuB;QAErBD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAC,cAAA,eAA0D;QAArCD,EAAA,CAAAI,UAAA,2BAAAC,qDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAd,MAAA,GAAAqB,MAAA;QAAA,EAAsB;QAA3CN,EAAA,CAAAG,YAAA,EAA0D;QAAAH,EAAA,CAAAO,SAAA,SAAI;QAEvEP,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAC,cAAA,eAA0D;QAArCD,EAAA,CAAAI,UAAA,2BAAAI,qDAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAb,MAAA,GAAAoB,MAAA;QAAA,EAAsB;QAA3CN,EAAA,CAAAG,YAAA,EAA0D;QAAAH,EAAA,CAAAO,SAAA,UAAI;QAEvEP,EAAA,CAAAC,cAAA,gBAAqD;QAAlBD,EAAA,CAAAI,UAAA,mBAAAK,8CAAA;UAAA,OAASV,GAAA,CAAAX,KAAA,EAAO;QAAA,EAAC;QAApDY,EAAA,CAAAG,YAAA,EAAqD;QACrDH,EAAA,CAAAC,cAAA,gBAA+E;QAA3CD,EAAA,CAAAI,UAAA,mBAAAM,8CAAA;UAAA,OAASX,GAAA,CAAAV,MAAA,EAAQ;QAAA,EAAC;QAAtDW,EAAA,CAAAG,YAAA,EAA+E;QAGjFH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,IAAyB;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;QAX5BH,EAAA,CAAAW,SAAA,GAAS;QAATX,EAAA,CAAAY,iBAAA,CAAAb,GAAA,CAAAf,KAAA,CAAS;QAGmBgB,EAAA,CAAAW,SAAA,GAAsB;QAAtBX,EAAA,CAAAa,UAAA,YAAAd,GAAA,CAAAd,MAAA,CAAsB;QAEtBe,EAAA,CAAAW,SAAA,GAAsB;QAAtBX,EAAA,CAAAa,UAAA,YAAAd,GAAA,CAAAb,MAAA,CAAsB;QAMnDc,EAAA,CAAAW,SAAA,GAAyB;QAAzBX,EAAA,CAAAc,kBAAA,iBAAAf,GAAA,CAAAZ,SAAA,KAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}