{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Mini Calculadora';\n    //Declaramos dos variables de tipo string (luego le haremos parseInt) e inicializadas por defecto a 0 que representen nuestras cifras a operar\n    this.cifra1 = \"0\";\n    this.cifra2 = \"0\";\n    //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n    this.resultado = 0;\n  }\n  //Implementamos la función de suma\n  sumar() {\n    this.resultado = parseInt(this.cifra1) + parseInt(this.cifra2);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[\"type\", \"text\", \"name\", \"cifra1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"cifra2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Sumar\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\");\n        i0.ɵɵtext(3, \" Cifra 1: \");\n        i0.ɵɵelementStart(4, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.cifra1 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\")(6, \"br\");\n        i0.ɵɵtext(7, \" Cifra 2: \");\n        i0.ɵɵelementStart(8, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.cifra2 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"br\");\n        i0.ɵɵelementStart(11, \"input\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_11_listener() {\n          return ctx.sumar();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cifra2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Resultado = \", ctx.resultado, \"\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","title","cifra1","cifra2","resultado","sumar","parseInt","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_Template_input_ngModelChange_4_listener","$event","ɵɵelement","AppComponent_Template_input_ngModelChange_8_listener","AppComponent_Template_input_click_11_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.ts","C:\\Users\\a921532\\OneDrive - Eviden\\Escritorio\\Angular\\appCalculadora\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Mini Calculadora';\n\n  //Declaramos dos variables de tipo string (luego le haremos parseInt) e inicializadas por defecto a 0 que representen nuestras cifras a operar\n  cifra1:string=\"0\";\n  cifra2:string=\"0\";\n\n  //Otra variable igual que las anteriores en las que almacenaremos el resultado de las operaciones\n  resultado:number=0;\n\n  //Implementamos la función de suma\n  sumar():void{\n    this.resultado = parseInt(this.cifra1) + parseInt(this.cifra2);\n  }\n}\n","<h1>{{title}}</h1>\n\n<form>\n  Cifra 1: <input type=\"text\" [(ngModel)] = \"cifra1\" name=\"cifra1\"><br><br>\n\n  Cifra 2: <input type=\"text\" [(ngModel)] = \"cifra2\" name=\"cifra2\"><br><br>\n\n  <input type=\"submit\" value=\"Sumar\" (click)=\"sumar()\">\n</form>\n\n<p>Resultado = {{resultado}}</p>"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,kBAAkB;IAE1B;IACA,KAAAC,MAAM,GAAQ,GAAG;IACjB,KAAAC,MAAM,GAAQ,GAAG;IAEjB;IACA,KAAAC,SAAS,GAAQ,CAAC;;EAElB;EACAC,KAAKA,CAAA;IACH,IAAI,CAACD,SAAS,GAAGE,QAAQ,CAAC,IAAI,CAACJ,MAAM,CAAC,GAAGI,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC;EAChE;EAAC,QAAAI,CAAA,G;qBAbUR,YAAY;EAAA;EAAA,QAAAS,EAAA,G;UAAZT,YAAY;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBE,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,GAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAElBH,EAAA,CAAAC,cAAA,WAAM;QACJD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAC,cAAA,eAAwD;QAArCD,EAAA,CAAAI,UAAA,2BAAAC,qDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAd,MAAA,GAAAqB,MAAA;QAAA,EAAsB;QAAzCN,EAAA,CAAAG,YAAA,EAAwD;QAAAH,EAAA,CAAAO,SAAA,SAAI;QAErEP,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAC,cAAA,eAAwD;QAArCD,EAAA,CAAAI,UAAA,2BAAAI,qDAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAb,MAAA,GAAAoB,MAAA;QAAA,EAAsB;QAAzCN,EAAA,CAAAG,YAAA,EAAwD;QAAAH,EAAA,CAAAO,SAAA,SAAI;QAErEP,EAAA,CAAAC,cAAA,gBAAqD;QAAlBD,EAAA,CAAAI,UAAA,mBAAAK,8CAAA;UAAA,OAASV,GAAA,CAAAX,KAAA,EAAO;QAAA,EAAC;QAApDY,EAAA,CAAAG,YAAA,EAAqD;QAGvDH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,IAAyB;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;QAV5BH,EAAA,CAAAU,SAAA,GAAS;QAATV,EAAA,CAAAW,iBAAA,CAAAZ,GAAA,CAAAf,KAAA,CAAS;QAGiBgB,EAAA,CAAAU,SAAA,GAAsB;QAAtBV,EAAA,CAAAY,UAAA,YAAAb,GAAA,CAAAd,MAAA,CAAsB;QAEtBe,EAAA,CAAAU,SAAA,GAAsB;QAAtBV,EAAA,CAAAY,UAAA,YAAAb,GAAA,CAAAb,MAAA,CAAsB;QAKjDc,EAAA,CAAAU,SAAA,GAAyB;QAAzBV,EAAA,CAAAa,kBAAA,iBAAAd,GAAA,CAAAZ,SAAA,KAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}